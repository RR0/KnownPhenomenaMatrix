angular.module("matrix", []).service("resourceBundleService", ["$log", "$q", "$rootScope", "$http", function (e, a, n, f) {
    var h = "http://rr0.org/time/1/9/7/7/Poher_Matrice/Matrix_" + userLang + ".json", g = a.defer();
    f({method: "GET", url: h}).success(function (a, f, q, b) {
        e.info("Loaded '" + h + "'");
        g.resolve(a)
    }).error(function (a, f, q, b) {
        g.reject("Could not load '" + h + "': " + f)
    });
    return g.promise
}]).service("matrixService", ["$log", "$rootScope", "$http", "resourceBundleService", function (e, a, n, f) {
    function h(a, b) {
        this.title = a;
        this.choices =
        {};
        this.index = b
    }

    function g(a, b, m) {
        this.label = a;
        this.answerType = b;
        this.knownPhenomenaProbabilities = m;
        this.value = !1
    }

    var m = {}, s;
    n({method: "GET", url: "http://rr0.org/time/1/9/7/7/Poher_Matrice/matrix.json"}).success(function (q, b, r, k) {
        e.info("Loaded 'http://rr0.org/time/1/9/7/7/Poher_Matrice/matrix.json'");
        f.then(function (b) {
            s = b;
            var k = 0;
            for (d in q) {
                var l = q[d], f = l.question.indexOf("."), r = l.question.substring(0, f), f = l.question.substring(f + 1), e = m[r];
                e || (e = new h(b[r], k++), m[r] = e);
                e.choices[f] = new g(b[l.question],
                    l.answertype, l.knownPhenomenaProbabilities)
            }
            a.$broadcast("dataLoaded", m)
        }, function (a) {
            e.error(a)
        })
    }).error(function (a, b, m, f) {
        e.info("Could not load 'http://rr0.org/time/1/9/7/7/Poher_Matrice/matrix.json': " + b)
    });
    return{compute: function (a) {
        var b = {}, f = 0, k;
        for (k in m) {
            var g = m[k], e;
            for (e in g.choices) {
                var l = g.choices[e];
                if (!1 != l.value)for (p in l = l.knownPhenomenaProbabilities, l)b[p] || (b[p] = 0), 0 == l[p] && (b[p]++, b[p] > f && (f = b[p]))
            }
        }
        k = [];
        for (var h in b)g = b[h], g = a ? f - g : g, e = s[h], k[g] = k[g] ? k[g] + (", " + e) : e.charAt(0).toUpperCase() +
            e.slice(1);
        a = [];
        for (b = 0; b < k.length; b++)k[b] && a.push(k[b]);
        return a
    }}
}]).controller("FormCtrl", ["$log", "$scope", "matrixService", function (e, a, n) {
    function f() {
        function g(a, b) {
            this.type = a;
            this.label = b
        }

        a.currentQuestion = a.questions[a.questionsKeys[a.questionIndex]];
        a.fields = {};
        for (var f = a.currentQuestion.choices, e = Object.keys(f), h = 0; h < e.length; h++) {
            var b = e[h];
            a.fields[b] = new g(f[b].answerType, f[b].label)
        }
    }

    a.questionIndex = 0;
    a.parameterChanged = function () {
        a.questionIndex = a.currentQuestion.index;
        f()
    };
    a.$on("dataLoaded",
        function (g, e) {
            a.questions = e;
            a.questionsKeys = Object.keys(e);
            f()
        });
    a.onPrevious = function () {
        0 <= a.questionIndex && (a.questionIndex--, f())
    };
    a.onNext = function () {
        a.questionIndex < a.questionsKeys.length && (a.questionIndex++, f())
    };
    a.resultsType = "NonProbable";
    var h = document.getElementById("explanations");
    a.compute = function (f) {
        var e = a.currentQuestion.choices[f];
        if (e && "radio" == e.answerType)for (c in a.currentQuestion.choices)e = a.currentQuestion.choices[c], "radio" == e.answerType && (e.value = c == f ? f : !1);
        a.explanations =
            n.compute("NonProbable" == a.resultsType);
        org.debug && org.walkIt(h)
    }
}]);
